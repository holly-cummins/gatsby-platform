{"version":3,"file":"component---src-pages-category-js-9d126f03301676a96a0b.js","mappings":"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","sources":["webpack://ducky-devine-gatsby-starter/./src/components/Article/Headline.js","webpack://ducky-devine-gatsby-starter/./src/components/Article/Article.js","webpack://ducky-devine-gatsby-starter/./src/components/List/List.js","webpack://ducky-devine-gatsby-starter/./src/pages/category.js","webpack://ducky-devine-gatsby-starter/./src/utils/filters.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Headline = props => {\n  const { title, children, theme } = props;\n\n  return (\n    <React.Fragment>\n      {title ? <h1>{title}</h1> : <h1>{children}</h1>}\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        h1 {\n          font-size: ${theme.font.size.xxl};\n          margin: ${theme.space.stack.l};\n          animation-name: headlineEntry;\n          animation-duration: ${theme.time.duration.long};\n          display: flex;\n          align-items: center; /* align vertical */\n\n          :global(span) {\n            font-weight: ${theme.font.weight.standard};\n            display: block;\n            font-size: 0.5em;\n            letter-spacing: 0;\n            margin: ${theme.space.stack.xs};\n          }\n\n          :global(svg) {\n            height: ${theme.font.size.s};\n            width: ${theme.font.size.s};\n            fill: ${theme.color.brand.primary};\n            margin: ${theme.space.m};\n          }\n        }\n\n        @keyframes headlineEntry {\n          from {\n            opacity: 0.5;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n\n        @from-width tablet {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\n          }\n        }\n\n        @from-width desktop {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Headline;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Article = props => {\n  const { children, theme } = props;\n\n  return (\n    <React.Fragment>\n      <article className=\"article\">{children}</article>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .article {\n          padding: ${theme.space.inset.default};\n          margin: 0 auto;\n        }\n        @from-width tablet {\n          .article {\n            padding: ${`calc(${theme.space.default}) calc(${theme.space.default} * 2)`};\n            max-width: ${theme.text.maxWidth.tablet};\n          }\n        }\n        @from-width desktop {\n          .article {\n            padding: ${`calc(${theme.space.default} * 2 + 90px) 0 calc(${\n              theme.space.default\n            } * 2)`};\n            max-width: ${theme.text.maxWidth.desktop};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Article;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport { icon } from \"../../utils/type\";\n\nconst List = props => {\n  const { edges, theme, showIcon, useShortDate } = props;\n\n  return (\n    <React.Fragment>\n      <ul data-testid=\"post-list-wrapper\">\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { type },\n              fields: { title, slug, prefix, shortDate }\n            }\n          } = edge;\n\n          const Icon = showIcon ? icon(type) : null;\n          const formattedDate = useShortDate ? shortDate : prefix;\n\n          const divs = (\n            <div className=\"row\">\n              {Icon && <Icon />}\n              <div className=\"date\">{formattedDate}</div>\n              <div className=\"title\">{title}</div>\n            </div>\n          );\n\n          return (\n            <li key={slug} className=\"post-list\">\n              <Link to={slug}>{divs}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        ul {\n          margin: ${theme.space.stack.m};\n          padding: ${theme.space.m};\n          list-style: none;\n        }\n\n        li {\n          font-size: ${theme.font.size.s};\n          line-height: ${theme.font.lineHeight.l};\n        }\n\n        .row {\n          display: flex;\n          justify-content: flex-start;\n          align-items: flex-start;\n          gap: 10px;\n          padding-bottom: 20px;\n        }\n\n        .date {\n          color: ${theme.color.brand.light};\n          flex: ${useShortDate ? \"15%\" : \"20%\"};\n          margin-right: 25px;\n        }\n\n        .title {\n          text-align: left;\n          flex: ${useShortDate ? \"85%\" : \"80%\"};\n        }\n\n        li :global(svg) {\n          position: relative;\n          top: 4px;\n          left: -10px;\n          color: ${theme.text.color.primary};\n          stroke-width: 40;\n          animation-duration: ${theme.time.duration.long};\n          animation-name: buttonIconMove;\n          animation-iteration-count: infinite;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired,\n  useShortDate: PropTypes.bool,\n  showIcon: PropTypes.bool\n};\n\nList.defaultProps = {\n  showIcon: true\n};\n\nexport default List;\n","import { Tag20 as Tag } from \"@carbon/icons-react\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article/\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\nimport Seo from \"../components/Seo\";\nimport { filterOutDrafts } from \"../utils/filters\";\nimport config from \"../utils/configger\";\n\nconst CategoryPage = props => {\n  const {\n    data: {\n      posts: { edges: edges }\n    }\n  } = props;\n\n  const posts = filterOutDrafts(edges);\n\n  // Create category list\n  const categories = {};\n  const displayCategories = {};\n  posts.forEach(edge => {\n    let {\n      node: {\n        fields: { category, displayCategory }\n      }\n    } = edge;\n\n    if (category) {\n      if (!categories[category]) {\n        categories[category] = [];\n      }\n      categories[category].push(edge);\n      // There may be variation in display categories, so just take the first one\n      displayCategories[category] = displayCategory;\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <header>\n              <Headline title={`What's ${config.authorShortName} Thinking About?`} theme={theme} />\n            </header>\n            {Object.keys(categories).map(category => (\n              <section key={category}>\n                <h2>\n                  <a href={`/category/${category}`}>\n                    <Tag />\n                    {displayCategories[category]}\n                  </a>\n                </h2>\n                <List edges={categories[category]} theme={theme} />\n              </section>\n            ))}\n            {/* --- STYLES --- */}\n            <style jsx>{`\n              h2 {\n                margin: 0 0 0.5em;\n              }\n\n              h2 :global(svg) {\n                height: 0.8em;\n                fill: ${theme.color.brand.primary};\n                position: relative;\n                top: 3px;\n                margin-right: 10px;\n              }\n            `}</style>\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo />\n    </React.Fragment>\n  );\n};\n\nCategoryPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default CategoryPage;\n\n// It'd be nice to embed a filter, but everything has to be static - see https://github.com/gatsbyjs/gatsby/issues/5069\n// ... so filter the list in code after the query\n\n// eslint-disable-next-line no-undef\nexport const query = graphql`\n  query PostsQuery {\n    posts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//(posts|publications|talks)/.*--/\" } }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            prefix\n            draft\n            title\n            category\n            displayCategory\n            cover {\n              children {\n                ... on ImageSharp {\n                  gatsbyImageData(width: 800, height: 360, layout: CONSTRAINED)\n                }\n              }\n            }\n          }\n          frontmatter {\n            author\n            type\n            url\n          }\n        }\n      }\n    }\n  }\n`;\n","// Do not create draft post files in production.\n// This is dynamic rather than a constant for ease of testing\n// See https://www.gatsbyjs.com/docs/how-to/local-development/environment-variables/ for details of the GATSBY_ variables\n// GATSBY_ACTIVE_ENV is the only one of these which 'sticks' in the client side\nconst isProd = () => {\n  const activeEnv =\n    process.env.GATSBY_ACTIVE_ENV ||\n    process.env.ACTIVE_ENV ||\n    process.env.NODE_ENV ||\n    \"development\";\n  // Be less chatty when testing (we can't use the env for this because a test may change it)\n  if (!process.env.SUPPRESS_ENV_OUTPUT) {\n    console.log(`Using environment config: '${activeEnv}'`);\n  }\n  return activeEnv === \"production\";\n};\n\nexports.generateFilter = otherFilter => {\n  let draftsFilters = { fields: { slug: { ne: \"\" } } };\n\n  if (isProd()) {\n    draftsFilters = { fields: { slug: { ne: \"\" }, draft: { ne: true } } };\n  }\n  return { ...draftsFilters, ...otherFilter };\n};\n\nexports.filterOutDrafts = (edges, showFuture) => {\n  // Do this filtering here so that it is dynamic, rather than being done at build-time\n  const now = new Date().getTime();\n  return edges.filter(edge => {\n    if (edge.node && edge.node.fields) {\n      // Exclude anything that looks like a draft in production\n\n      if (isProd()) {\n        // The prefix should exist and match a date in prod\n        // We have to parse a date so we know if it is date-y but we want to use the same regex we use in the graphql filters\n        if (edge.node.fields.draft) {\n          return false;\n        }\n      }\n\n      if (!showFuture) {\n        const date = new Date(edge.node.fields.prefix);\n        const isInTheFuture = date.getTime() > now;\n        return !isInTheFuture;\n      }\n\n      return true;\n    }\n    // If there is no prefix at all, let it through (because otherwise tests get bogged down in boilerplate)\n    return true;\n  });\n};\n"],"names":["props","title","children","theme","React","className","_JSXStyle","dynamic","font","size","xxl","space","stack","l","time","duration","long","weight","standard","xs","s","color","brand","primary","m","xl","id","inset","default","text","maxWidth","tablet","desktop","List","edges","showIcon","useShortDate","lineHeight","light","map","edge","node","frontmatter","type","fields","slug","prefix","shortDate","Icon","icon","formattedDate","divs","key","Link","to","defaultProps","data","posts","filterOutDrafts","categories","displayCategories","forEach","category","displayCategory","push","ThemeContext","Consumer","Article","Headline","config","Object","keys","href","Tag","Seo","isProd","activeEnv","process","SUPPRESS_ENV_OUTPUT","console","log","exports","showFuture","now","Date","getTime","filter","draft"],"sourceRoot":""}