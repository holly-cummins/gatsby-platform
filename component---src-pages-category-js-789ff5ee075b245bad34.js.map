{"version":3,"file":"component---src-pages-category-js-789ff5ee075b245bad34.js","mappings":"0KAmEA,IAhEiB,SAAAA,GACf,IAAQC,EAA2BD,EAA3BC,MAAOC,EAAoBF,EAApBE,SAAUC,EAAUH,EAAVG,MAEzB,OACE,gBAAC,WAAD,KACGF,EAAQ,kEAKQE,EAAMC,KAAKC,KAAKC,IACnBH,EAAMI,MAAMC,MAAMC,EAENN,EAAMO,KAAKC,SAASC,KAKzBT,EAAMC,KAAKS,OAAOC,SAIvBX,EAAMI,MAAMC,MAAMO,GAIlBZ,EAAMC,KAAKC,KAAKW,EACjBb,EAAMC,KAAKC,KAAKW,EACjBb,EAAMc,MAAMC,MAAMC,QAChBhB,EAAMI,MAAMa,EAxBnB,QAuCkBjB,EAAMC,KAAKC,KAAKgB,GAvClC,kBA6CkBlB,EAAMC,KAAKC,KAAKgB,GA7ClC,eAAKpB,GAAc,kEAKXE,EAAMC,KAAKC,KAAKC,IACnBH,EAAMI,MAAMC,MAAMC,EAENN,EAAMO,KAAKC,SAASC,KAKzBT,EAAMC,KAAKS,OAAOC,SAIvBX,EAAMI,MAAMC,MAAMO,GAIlBZ,EAAMC,KAAKC,KAAKW,EACjBb,EAAMC,KAAKC,KAAKW,EACjBb,EAAMc,MAAMC,MAAMC,QAChBhB,EAAMI,MAAMa,EAxBA,QAuCDjB,EAAMC,KAAKC,KAAKgB,GAvCf,kBA6CDlB,EAAMC,KAAKC,KAAKgB,GA7Cf,eAAKnB,GADnC,oDAMmBC,EAAMC,KAAKC,KAAKC,IACnBH,EAAMI,MAAMC,MAAMC,EAENN,EAAMO,KAAKC,SAASC,KAKzBT,EAAMC,KAAKS,OAAOC,SAIvBX,EAAMI,MAAMC,MAAMO,GAIlBZ,EAAMC,KAAKC,KAAKW,EACjBb,EAAMC,KAAKC,KAAKW,EACjBb,EAAMc,MAAMC,MAAMC,QAChBhB,EAAMI,MAAMa,EAzB9B,QAwC6BjB,EAAMC,KAAKC,KAAKgB,GAxC7C,kBA8C6BlB,EAAMC,KAAKC,KAAKgB,GA9C7C,0DAMmBlB,EAAMC,KAAKC,KAAKC,IANnC,WAOgBH,EAAMI,MAAMC,MAAMC,EAPlC,gMAS4BN,EAAMO,KAAKC,SAASC,KAThD,+BAS4BT,EAAMO,KAAKC,SAASC,KAThD,uBAS4BT,EAAMO,KAAKC,SAASC,KAThD,uTAcuBT,EAAMC,KAAKS,OAAOC,SAdzC,8HAkBkBX,EAAMI,MAAMC,MAAMO,GAlBpC,mDAsBkBZ,EAAMC,KAAKC,KAAKW,EAtBlC,UAuBiBb,EAAMC,KAAKC,KAAKW,EAvBjC,SAwBgBb,EAAMc,MAAMC,MAAMC,QAxBlC,WAyBkBhB,EAAMI,MAAMa,EAzB9B,sZAwC6BjB,EAAMC,KAAKC,KAAKgB,GAxC7C,oGA8C6BlB,EAAMC,KAAKC,KAAKgB,GA9C7C,kB,6FCiCJ,EArCgB,SAAArB,GACd,IAAQE,EAAoBF,EAApBE,SAAUC,EAAUH,EAAVG,MAElB,OACE,gBAAC,WAAD,KACE,uEAKeA,EAAMI,MAAMe,MAAMC,QALjC,QAUyBpB,EAAMI,MAAMgB,QAVrC,UAUsDpB,EAAMI,MAAMgB,QAVlE,QAWmBpB,EAAMqB,KAAKC,SAASC,OAXvC,QAgByBvB,EAAMI,MAAMgB,QAhBrC,uBAiBQpB,EAAMI,MAAMgB,QAjBpB,QAmBmBpB,EAAMqB,KAAKC,SAASE,YAnBvC,YAA8BzB,GADhC,oDAMiBC,EAAMI,MAAMe,MAAMC,QANnC,QAW2BpB,EAAMI,MAAMgB,QAXvC,UAWwDpB,EAAMI,MAAMgB,QAXpE,QAYqBpB,EAAMqB,KAAKC,SAASC,OAZzC,QAiB2BvB,EAAMI,MAAMgB,QAjBvC,uBAkBUpB,EAAMI,MAAMgB,QAlBtB,QAoBqBpB,EAAMqB,KAAKC,SAASE,UApBzC,kDAMiBxB,EAAMI,MAAMe,MAAMC,QANnC,6GAW2BpB,EAAMI,MAAMgB,QAXvC,UAWwDpB,EAAMI,MAAMgB,QAXpE,mBAYqBpB,EAAMqB,KAAKC,SAASC,OAZzC,iGAiB2BvB,EAAMI,MAAMgB,QAjBvC,uBAkBUpB,EAAMI,MAAMgB,QAlBtB,mBAoBqBpB,EAAMqB,KAAKC,SAASE,QApBzC,W,kFCFEC,EAAO,SAAA5B,GACX,IAAQ6B,EAAyC7B,EAAzC6B,MAAO1B,EAAkCH,EAAlCG,MAAO2B,EAA2B9B,EAA3B8B,SAAUC,EAAiB/B,EAAjB+B,aAEhC,OACE,gBAAC,WAAD,KACE,sBAAI,cAAY,oBAAhB,4CA+Bc5B,EAAMI,MAAMC,MAAMY,EACjBjB,EAAMI,MAAMa,EAKVjB,EAAMC,KAAKC,KAAKW,EACdb,EAAMC,KAAK4B,WAAWvB,EAY5BN,EAAMc,MAAMC,MAAMe,MACnBF,EAAe,MAAQ,MAMvBA,EAAe,MAAQ,MAOtB5B,EAAMqB,KAAKP,MAAME,QAEJhB,EAAMO,KAAKC,SAASC,UAjE3CiB,EAAMK,KAAI,SAAAC,GACT,MAKIA,EAJFC,KACiBC,EAFnB,EAEIC,YAAeD,KAFnB,IAGIE,OAAUtC,EAHd,EAGcA,MAAOuC,EAHrB,EAGqBA,KAAMC,EAH3B,EAG2BA,OAAQC,EAHnC,EAGmCA,UAI7BC,EAAOb,GAAWc,EAAAA,EAAAA,IAAKP,GAAQ,KAC/BQ,EAAgBd,EAAeW,EAAYD,EAE3CK,EACJ,mEAkBQ3C,EAAMI,MAAMC,MAAMY,EACjBjB,EAAMI,MAAMa,EAKVjB,EAAMC,KAAKC,KAAKW,EACdb,EAAMC,KAAK4B,WAAWvB,EAY5BN,EAAMc,MAAMC,MAAMe,MACnBF,EAAe,MAAQ,MAMvBA,EAAe,MAAQ,MAOtB5B,EAAMqB,KAAKP,MAAME,QAEJhB,EAAMO,KAAKC,SAASC,SArDxC,QACG+B,GAAQ,gBAACA,EAAD,6CAiBHxC,EAAMI,MAAMC,MAAMY,EACjBjB,EAAMI,MAAMa,EAKVjB,EAAMC,KAAKC,KAAKW,EACdb,EAAMC,KAAK4B,WAAWvB,EAY5BN,EAAMc,MAAMC,MAAMe,MACnBF,EAAe,MAAQ,MAMvBA,EAAe,MAAQ,MAOtB5B,EAAMqB,KAAKP,MAAME,QAEJhB,EAAMO,KAAKC,SAASC,WAnDtC,mEAgBMT,EAAMI,MAAMC,MAAMY,EACjBjB,EAAMI,MAAMa,EAKVjB,EAAMC,KAAKC,KAAKW,EACdb,EAAMC,KAAK4B,WAAWvB,EAY5BN,EAAMc,MAAMC,MAAMe,MACnBF,EAAe,MAAQ,MAMvBA,EAAe,MAAQ,MAOtB5B,EAAMqB,KAAKP,MAAME,QAEJhB,EAAMO,KAAKC,SAASC,SAnDtC,SAAuBiC,GACvB,mEAeM1C,EAAMI,MAAMC,MAAMY,EACjBjB,EAAMI,MAAMa,EAKVjB,EAAMC,KAAKC,KAAKW,EACdb,EAAMC,KAAK4B,WAAWvB,EAY5BN,EAAMc,MAAMC,MAAMe,MACnBF,EAAe,MAAQ,MAMvBA,EAAe,MAAQ,MAOtB5B,EAAMqB,KAAKP,MAAME,QAEJhB,EAAMO,KAAKC,SAASC,SAlDtC,UAAwBX,IAI5B,OACE,sBAAI8C,IAAKP,EAAT,4CAUQrC,EAAMI,MAAMC,MAAMY,EACjBjB,EAAMI,MAAMa,EAKVjB,EAAMC,KAAKC,KAAKW,EACdb,EAAMC,KAAK4B,WAAWvB,EAY5BN,EAAMc,MAAMC,MAAMe,MACnBF,EAAe,MAAQ,MAMvBA,EAAe,MAAQ,MAOtB5B,EAAMqB,KAAKP,MAAME,QAEJhB,EAAMO,KAAKC,SAASC,SA7CxC,cACE,gBAAC,EAAAoC,KAAD,CAAMC,GAAIT,GAAOM,QAvB3B,oDAgCgB3C,EAAMI,MAAMC,MAAMY,EACjBjB,EAAMI,MAAMa,EAKVjB,EAAMC,KAAKC,KAAKW,EACdb,EAAMC,KAAK4B,WAAWvB,EAY5BN,EAAMc,MAAMC,MAAMe,MACnBF,EAAe,MAAQ,MAMvBA,EAAe,MAAQ,MAOtB5B,EAAMqB,KAAKP,MAAME,QAEJhB,EAAMO,KAAKC,SAASC,OAnEhD,2CAgCgBT,EAAMI,MAAMC,MAAMY,EAhClC,YAiCiBjB,EAAMI,MAAMa,EAjC7B,kEAsCmBjB,EAAMC,KAAKC,KAAKW,EAtCnC,gBAuCqBb,EAAMC,KAAK4B,WAAWvB,EAvC3C,ohBAmDeN,EAAMc,MAAMC,MAAMe,MAnDjC,sBAoDcF,EAAe,MAAQ,OApDrC,uBAoDcA,EAAe,MAAQ,OApDrC,kBAoDcA,EAAe,MAAQ,OApDrC,cAoDcA,EAAe,MAAQ,OApDrC,UAoDcA,EAAe,MAAQ,OApDrC,gGA0DcA,EAAe,MAAQ,OA1DrC,uBA0DcA,EAAe,MAAQ,OA1DrC,kBA0DcA,EAAe,MAAQ,OA1DrC,cA0DcA,EAAe,MAAQ,OA1DrC,UA0DcA,EAAe,MAAQ,OA1DrC,uFAiEe5B,EAAMqB,KAAKP,MAAME,QAjEhC,+CAmE4BhB,EAAMO,KAAKC,SAASC,KAnEhD,+BAmE4BT,EAAMO,KAAKC,SAASC,KAnEhD,uBAmE4BT,EAAMO,KAAKC,SAASC,KAnEhD,sSAmFJgB,EAAKsB,aAAe,CAClBpB,UAAU,GAGZ,O,yPCRA,UA3EqB,SAAA9B,GACnB,IAEoB6B,EAEhB7B,EAHFmD,KACEC,MAASvB,MAIPuB,GAAQC,EAAAA,EAAAA,GAAgBxB,GAGxByB,EAAa,GACbC,EAAoB,GAkB1B,OAjBAH,EAAMI,SAAQ,SAAArB,GACZ,MAIIA,EAHFC,KACEG,OAAUkB,EAFd,EAEcA,SAAUC,EAFxB,EAEwBA,gBAIpBD,IACGH,EAAWG,KACdH,EAAWG,GAAY,IAEzBH,EAAWG,GAAUE,KAAKxB,GAE1BoB,EAAkBE,GAAYC,MAKhC,gBAAC,WAAD,KACE,gBAAC,EAAAE,aAAA,SAAD,MACG,SAAAzD,GAAK,OACJ,gBAAC,IAAD,CAASA,MAAOA,GACd,sEAsBYA,EAAMc,MAAMC,MAAMC,aArB5B,gBAAC,IAAD,CAAUlB,MAAK,UAAY4D,IAAAA,gBAAZ,mBAAsD1D,MAAOA,KAE7E2D,OAAOC,KAAKT,GAAYpB,KAAI,SAAAuB,GAAQ,OACnC,2BAASV,IAAKU,EAAd,4CAkBUtD,EAAMc,MAAMC,MAAMC,aAjB1B,kEAiBQhB,EAAMc,MAAMC,MAAMC,aAhBxB,qBAAG6C,KAAI,aAAeP,EAAtB,4CAgBMtD,EAAMc,MAAMC,MAAMC,aAftB,gBAAC,MAAD,MACCoC,EAAkBE,KAGvB,gBAAC,IAAD,CAAM5B,MAAOyB,EAAWG,GAAWtD,MAAOA,QAZhD,oDAuBcA,EAAMc,MAAMC,MAAMC,UAvBhC,+GAuBchB,EAAMc,MAAMC,MAAMC,QAvBhC,uDAiCJ,gBAAC,IAAD,S,wBC3EA8C,EAAS,WAUb,MAHKC,GAAYC,qBACfC,QAAQC,IAAR,2CAEKC,GAYTC,EAAQ,EAAkB,SAAC1C,EAAO2C,GAEhC,IAAMC,GAAM,IAAIC,MAAOC,UACvB,OAAO9C,EAAM+C,QAAO,SAAAzC,GAClB,OAAIA,EAAKC,OAAQD,EAAKC,KAAKG,UAGrB0B,MAGE9B,EAAKC,KAAKG,OAAOsC,WAKlBL,KACU,IAAIE,KAAKvC,EAAKC,KAAKG,OAAOE,QACZkC,UAAYF","sources":["webpack://ducky-devine-gatsby-starter/./src/components/Article/Headline.js","webpack://ducky-devine-gatsby-starter/./src/components/Article/Article.js","webpack://ducky-devine-gatsby-starter/./src/components/List/List.js","webpack://ducky-devine-gatsby-starter/./src/pages/category.js","webpack://ducky-devine-gatsby-starter/./src/utils/filters.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Headline = props => {\n  const { title, children, theme } = props;\n\n  return (\n    <React.Fragment>\n      {title ? <h1>{title}</h1> : <h1>{children}</h1>}\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        h1 {\n          font-size: ${theme.font.size.xxl};\n          margin: ${theme.space.stack.l};\n          animation-name: headlineEntry;\n          animation-duration: ${theme.time.duration.long};\n          display: flex;\n          align-items: center; /* align vertical */\n\n          :global(span) {\n            font-weight: ${theme.font.weight.standard};\n            display: block;\n            font-size: 0.5em;\n            letter-spacing: 0;\n            margin: ${theme.space.stack.xs};\n          }\n\n          :global(svg) {\n            height: ${theme.font.size.s};\n            width: ${theme.font.size.s};\n            fill: ${theme.color.brand.primary};\n            margin: ${theme.space.m};\n          }\n        }\n\n        @keyframes headlineEntry {\n          from {\n            opacity: 0.5;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n\n        @from-width tablet {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\n          }\n        }\n\n        @from-width desktop {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Headline;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Article = props => {\n  const { children, theme } = props;\n\n  return (\n    <React.Fragment>\n      <article className=\"article\">{children}</article>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .article {\n          padding: ${theme.space.inset.default};\n          margin: 0 auto;\n        }\n        @from-width tablet {\n          .article {\n            padding: ${`calc(${theme.space.default}) calc(${theme.space.default} * 2)`};\n            max-width: ${theme.text.maxWidth.tablet};\n          }\n        }\n        @from-width desktop {\n          .article {\n            padding: ${`calc(${theme.space.default} * 2 + 90px) 0 calc(${\n              theme.space.default\n            } * 2)`};\n            max-width: ${theme.text.maxWidth.desktop};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Article;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport { icon } from \"../../utils/type\";\n\nconst List = props => {\n  const { edges, theme, showIcon, useShortDate } = props;\n\n  return (\n    <React.Fragment>\n      <ul data-testid=\"post-list-wrapper\">\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { type },\n              fields: { title, slug, prefix, shortDate }\n            }\n          } = edge;\n\n          const Icon = showIcon ? icon(type) : null;\n          const formattedDate = useShortDate ? shortDate : prefix;\n\n          const divs = (\n            <div className=\"row\">\n              {Icon && <Icon />}\n              <div className=\"date\">{formattedDate}</div>\n              <div className=\"title\">{title}</div>\n            </div>\n          );\n\n          return (\n            <li key={slug} className=\"post-list\">\n              <Link to={slug}>{divs}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        ul {\n          margin: ${theme.space.stack.m};\n          padding: ${theme.space.m};\n          list-style: none;\n        }\n\n        li {\n          font-size: ${theme.font.size.s};\n          line-height: ${theme.font.lineHeight.l};\n        }\n\n        .row {\n          display: flex;\n          justify-content: flex-start;\n          align-items: flex-start;\n          gap: 10px;\n          padding-bottom: 20px;\n        }\n\n        .date {\n          color: ${theme.color.brand.light};\n          flex: ${useShortDate ? \"15%\" : \"20%\"};\n          margin-right: 25px;\n        }\n\n        .title {\n          text-align: left;\n          flex: ${useShortDate ? \"85%\" : \"80%\"};\n        }\n\n        li :global(svg) {\n          position: relative;\n          top: 4px;\n          left: -10px;\n          color: ${theme.text.color.primary};\n          stroke-width: 40;\n          animation-duration: ${theme.time.duration.long};\n          animation-name: buttonIconMove;\n          animation-iteration-count: infinite;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired,\n  useShortDate: PropTypes.bool,\n  showIcon: PropTypes.bool\n};\n\nList.defaultProps = {\n  showIcon: true\n};\n\nexport default List;\n","import { Tag20 as Tag } from \"@carbon/icons-react\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article/\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\nimport Seo from \"../components/Seo\";\nimport { filterOutDrafts } from \"../utils/filters\";\nimport config from \"../utils/configger\";\n\nconst CategoryPage = props => {\n  const {\n    data: {\n      posts: { edges: edges }\n    }\n  } = props;\n\n  const posts = filterOutDrafts(edges);\n\n  // Create category list\n  const categories = {};\n  const displayCategories = {};\n  posts.forEach(edge => {\n    let {\n      node: {\n        fields: { category, displayCategory }\n      }\n    } = edge;\n\n    if (category) {\n      if (!categories[category]) {\n        categories[category] = [];\n      }\n      categories[category].push(edge);\n      // There may be variation in display categories, so just take the first one\n      displayCategories[category] = displayCategory;\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <header>\n              <Headline title={`What's ${config.authorShortName} Thinking About?`} theme={theme} />\n            </header>\n            {Object.keys(categories).map(category => (\n              <section key={category}>\n                <h2>\n                  <a href={`/category/${category}`}>\n                    <Tag />\n                    {displayCategories[category]}\n                  </a>\n                </h2>\n                <List edges={categories[category]} theme={theme} />\n              </section>\n            ))}\n            {/* --- STYLES --- */}\n            <style jsx>{`\n              h2 {\n                margin: 0 0 0.5em;\n              }\n\n              h2 :global(svg) {\n                height: 0.8em;\n                fill: ${theme.color.brand.primary};\n                position: relative;\n                top: 3px;\n                margin-right: 10px;\n              }\n            `}</style>\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo />\n    </React.Fragment>\n  );\n};\n\nCategoryPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default CategoryPage;\n\n// It'd be nice to embed a filter, but everything has to be static - see https://github.com/gatsbyjs/gatsby/issues/5069\n// ... so filter the list in code after the query\n\n// eslint-disable-next-line no-undef\nexport const query = graphql`\n  query PostsQuery {\n    posts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//(posts|publications|talks)/.*--/\" } }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            prefix\n            draft\n            title\n            category\n            displayCategory\n            cover {\n              children {\n                ... on ImageSharp {\n                  gatsbyImageData(width: 800, height: 360, layout: CONSTRAINED)\n                }\n              }\n            }\n          }\n          frontmatter {\n            author\n            type\n            url\n          }\n        }\n      }\n    }\n  }\n`;\n","// Do not create draft post files in production.\n// This is dynamic rather than a constant for ease of testing\n// See https://www.gatsbyjs.com/docs/how-to/local-development/environment-variables/ for details of the GATSBY_ variables\n// GATSBY_ACTIVE_ENV is the only one of these which 'sticks' in the client side\nconst isProd = () => {\n  const activeEnv =\n    process.env.GATSBY_ACTIVE_ENV ||\n    process.env.ACTIVE_ENV ||\n    process.env.NODE_ENV ||\n    \"development\";\n  // Be less chatty when testing (we can't use the env for this because a test may change it)\n  if (!process.env.SUPPRESS_ENV_OUTPUT) {\n    console.log(`Using environment config: '${activeEnv}'`);\n  }\n  return activeEnv === \"production\";\n};\n\nexports.generateFilter = otherFilter => {\n  let draftsFilters = { fields: { slug: { ne: \"\" } } };\n\n  if (isProd()) {\n    draftsFilters = { fields: { slug: { ne: \"\" }, draft: { ne: true } } };\n  }\n  return { ...draftsFilters, ...otherFilter };\n};\n\nexports.filterOutDrafts = (edges, showFuture) => {\n  // Do this filtering here so that it is dynamic, rather than being done at build-time\n  const now = new Date().getTime();\n  return edges.filter(edge => {\n    if (edge.node && edge.node.fields) {\n      // Exclude anything that looks like a draft in production\n\n      if (isProd()) {\n        // The prefix should exist and match a date in prod\n        // We have to parse a date so we know if it is date-y but we want to use the same regex we use in the graphql filters\n        if (edge.node.fields.draft) {\n          return false;\n        }\n      }\n\n      if (!showFuture) {\n        const date = new Date(edge.node.fields.prefix);\n        const isInTheFuture = date.getTime() > now;\n        return !isInTheFuture;\n      }\n\n      return true;\n    }\n    // If there is no prefix at all, let it through (because otherwise tests get bogged down in boilerplate)\n    return true;\n  });\n};\n"],"names":["props","title","children","theme","font","size","xxl","space","stack","l","time","duration","long","weight","standard","xs","s","color","brand","primary","m","xl","inset","default","text","maxWidth","tablet","desktop","List","edges","showIcon","useShortDate","lineHeight","light","map","edge","node","type","frontmatter","fields","slug","prefix","shortDate","Icon","icon","formattedDate","divs","key","Link","to","defaultProps","data","posts","filterOutDrafts","categories","displayCategories","forEach","category","displayCategory","push","ThemeContext","config","Object","keys","href","isProd","process","SUPPRESS_ENV_OUTPUT","console","log","activeEnv","exports","showFuture","now","Date","getTime","filter","draft"],"sourceRoot":""}