{"version":3,"file":"74-dd55918fc922a09e820b.js","mappings":"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","sources":["webpack://ducky-devine-gatsby-starter/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://ducky-devine-gatsby-starter/../src/components/intersection-observer.ts","webpack://ducky-devine-gatsby-starter/../src/components/lazy-hydrate.tsx","webpack://ducky-devine-gatsby-starter/./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack://ducky-devine-gatsby-starter/./node_modules/gatsby/node_modules/regenerator-runtime/runtime.js"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","let intersectionObserver: IntersectionObserver\n\nexport type Unobserver = () => void\n\nconst ioEntryMap = new WeakMap<HTMLElement, () => void>()\n/* eslint-disable @typescript-eslint/no-explicit-any  */\nconst connection =\n  (navigator as any).connection ||\n  (navigator as any).mozConnection ||\n  (navigator as any).webkitConnection\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n// These match the thresholds used in Chrome's native lazy loading\n// @see https://web.dev/browser-level-image-lazy-loading/#distance-from-viewport-thresholds\nconst FAST_CONNECTION_THRESHOLD = `1250px`\nconst SLOW_CONNECTION_THRESHOLD = `2500px`\n\nexport function createIntersectionObserver(\n  callback: () => void\n): (element: HTMLElement) => Unobserver {\n  const connectionType = connection?.effectiveType\n\n  // if we don't support intersectionObserver we don't lazy load (Sorry IE 11).\n  if (!(`IntersectionObserver` in window)) {\n    return function observe(): Unobserver {\n      callback()\n      return function unobserve(): void {}\n    }\n  }\n\n  if (!intersectionObserver) {\n    intersectionObserver = new IntersectionObserver(\n      entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            // Get the matching entry's callback and call it\n            ioEntryMap.get(entry.target as HTMLElement)?.()\n            // We only need to call it once\n            ioEntryMap.delete(entry.target as HTMLElement)\n          }\n        })\n      },\n      {\n        rootMargin:\n          connectionType === `4g` && !connection?.saveData\n            ? FAST_CONNECTION_THRESHOLD\n            : SLOW_CONNECTION_THRESHOLD,\n      }\n    )\n  }\n\n  return function observe(element: HTMLElement): Unobserver {\n    // Store a reference to the callback mapped to the element being watched\n    ioEntryMap.set(element, callback)\n    intersectionObserver.observe(element)\n\n    return function unobserve(): void {\n      if (intersectionObserver && element) {\n        ioEntryMap.delete(element)\n        intersectionObserver.unobserve(element)\n      }\n    }\n  }\n}\n","import React from \"react\"\nimport { renderToStaticMarkup } from \"react-dom/server\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage } from \"./main-image\"\nimport {\n  hasNativeLazyLoadSupport,\n  getMainProps,\n  getPlaceholderProps,\n} from \"./hooks\"\nimport { createIntersectionObserver } from \"./intersection-observer\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { GatsbyImageProps } from \"./gatsby-image.browser\"\n\ntype LazyHydrateProps = Omit<GatsbyImageProps, \"as\" | \"style\" | \"className\"> & {\n  isLoading: boolean\n  isLoaded: boolean\n}\n\nasync function applyPolyfill(element: HTMLImageElement): Promise<void> {\n  if (!(`objectFitPolyfill` in window)) {\n    await import(\n      // @ts-ignore typescript can't find the module for some reason ¯\\_(ツ)_/¯\n      /* webpackChunkName: \"gatsby-plugin-image-objectfit-polyfill\" */ `objectFitPolyfill`\n    )\n  }\n  ;(window as any).objectFitPolyfill(element)\n}\n\nfunction toggleLoaded(\n  mainImage: HTMLElement,\n  placeholderImage: HTMLElement\n): void {\n  mainImage.style.opacity = `1`\n\n  if (placeholderImage) {\n    placeholderImage.style.opacity = `0`\n  }\n}\n\nfunction startLoading(\n  element: HTMLElement,\n  cacheKey: string,\n  imageCache: Set<string>,\n  onStartLoad: GatsbyImageProps[\"onStartLoad\"],\n  onLoad: GatsbyImageProps[\"onLoad\"],\n  onError: GatsbyImageProps[\"onError\"]\n): () => void {\n  const mainImage = element.querySelector(\n    `[data-main-image]`\n  ) as HTMLImageElement\n  const placeholderImage = element.querySelector<HTMLElement>(\n    `[data-placeholder-image]`\n  )\n  const isCached = imageCache.has(cacheKey)\n\n  function onImageLoaded(e): void {\n    // eslint-disable-next-line @babel/no-invalid-this\n    this.removeEventListener(`load`, onImageLoaded)\n\n    const target = e.currentTarget\n    const img = new Image()\n    img.src = target.currentSrc\n\n    if (img.decode) {\n      // Decode the image through javascript to support our transition\n      img\n        .decode()\n        .then(() => {\n          // eslint-disable-next-line @babel/no-invalid-this\n          toggleLoaded(this, placeholderImage)\n          onLoad?.({\n            wasCached: isCached,\n          })\n        })\n        .catch(e => {\n          // eslint-disable-next-line @babel/no-invalid-this\n          toggleLoaded(this, placeholderImage)\n          onError?.(e)\n        })\n    } else {\n      // eslint-disable-next-line @babel/no-invalid-this\n      toggleLoaded(this, placeholderImage)\n      onLoad?.({\n        wasCached: isCached,\n      })\n    }\n  }\n\n  mainImage.addEventListener(`load`, onImageLoaded)\n\n  onStartLoad?.({\n    wasCached: isCached,\n  })\n  Array.from(mainImage.parentElement.children).forEach(child => {\n    const src = child.getAttribute(`data-src`)\n    const srcSet = child.getAttribute(`data-srcset`)\n    if (src) {\n      child.removeAttribute(`data-src`)\n      child.setAttribute(`src`, src)\n    }\n    if (srcSet) {\n      child.removeAttribute(`data-srcset`)\n      child.setAttribute(`srcset`, srcSet)\n    }\n  })\n\n  imageCache.add(cacheKey)\n\n  // Load times not always fires - mostly when it's a 304\n  // We check if the image is already completed and if so we trigger onload.\n  if (mainImage.complete) {\n    onImageLoaded.call(mainImage, {\n      currentTarget: mainImage,\n    })\n  }\n\n  return (): void => {\n    if (mainImage) {\n      mainImage.removeEventListener(`load`, onImageLoaded)\n    }\n  }\n}\n\nexport function swapPlaceholderImage(\n  element: HTMLElement,\n  cacheKey: string,\n  imageCache: Set<string>,\n  style: React.CSSProperties,\n  onStartLoad: GatsbyImageProps[\"onStartLoad\"],\n  onLoad: GatsbyImageProps[\"onLoad\"],\n  onError: GatsbyImageProps[\"onError\"]\n): () => void {\n  if (!hasNativeLazyLoadSupport()) {\n    let cleanup\n    const io = createIntersectionObserver(() => {\n      cleanup = startLoading(\n        element,\n        cacheKey,\n        imageCache,\n        onStartLoad,\n        onLoad,\n        onError\n      )\n    })\n    const unobserve = io(element)\n\n    // Polyfill \"object-fit\" if unsupported (mostly IE)\n    if (!(`objectFit` in document.documentElement.style)) {\n      element.dataset.objectFit = style.objectFit ?? `cover`\n      element.dataset.objectPosition = `${style.objectPosition ?? `50% 50%`}`\n      applyPolyfill(element as HTMLImageElement)\n    }\n\n    return (): void => {\n      if (cleanup) {\n        cleanup()\n      }\n\n      unobserve()\n    }\n  }\n\n  return startLoading(\n    element,\n    cacheKey,\n    imageCache,\n    onStartLoad,\n    onLoad,\n    onError\n  )\n}\n\nexport function renderImageToString({\n  image,\n  loading = `lazy`,\n  isLoading,\n  isLoaded,\n  imgClassName,\n  imgStyle = {},\n  objectPosition,\n  backgroundColor,\n  objectFit = `cover`,\n  ...props\n}: LazyHydrateProps): string {\n  const {\n    width,\n    height,\n    layout,\n    images,\n    placeholder,\n    backgroundColor: wrapperBackgroundColor,\n  } = image\n\n  imgStyle = {\n    objectFit,\n    objectPosition,\n    backgroundColor,\n    ...imgStyle,\n  }\n\n  return renderToStaticMarkup(\n    <LayoutWrapper layout={layout} width={width} height={height}>\n      <Placeholder\n        {...getPlaceholderProps(\n          placeholder,\n          isLoaded,\n          layout,\n          width,\n          height,\n          wrapperBackgroundColor,\n          objectFit,\n          objectPosition\n        )}\n      />\n\n      <MainImage\n        {...(props as Omit<\n          MainImageProps,\n          \"images\" | \"fallback\" | \"onLoad\" | \"onError\"\n        >)}\n        width={width}\n        height={height}\n        className={imgClassName}\n        {...getMainProps(isLoading, isLoaded, images, loading, imgStyle)}\n      />\n    </LayoutWrapper>\n  )\n}\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","intersectionObserver","ioEntryMap","WeakMap","connection","navigator","mozConnection","webkitConnection","toggleLoaded","mainImage","placeholderImage","style","opacity","startLoading","element","cacheKey","imageCache","onStartLoad","onLoad","onError","querySelector","isCached","has","onImageLoaded","e","this","removeEventListener","target","currentTarget","img","Image","src","currentSrc","decode","wasCached","catch","addEventListener","Array","from","parentElement","children","forEach","child","getAttribute","srcSet","removeAttribute","setAttribute","add","complete","call","swapPlaceholderImage","hasNativeLazyLoadSupport","cleanup","io","callback","window","IntersectionObserver","entries","entry","isIntersecting","get","delete","rootMargin","effectiveType","saveData","set","observe","unobserve","document","documentElement","dataset","objectFit","objectPosition","fn","async","objectFitPolyfill","self","args","arguments","apply","err","undefined","renderImageToString","image","loading","isLoading","isLoaded","imgClassName","imgStyle","backgroundColor","props","width","height","layout","images","placeholder","wrapperBackgroundColor","renderToStaticMarkup","React","LayoutWrapper","Placeholder","getPlaceholderProps","MainImage","className","getMainProps","module","exports","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"sourceRoot":""}