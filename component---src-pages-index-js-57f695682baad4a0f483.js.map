{"version":3,"file":"component---src-pages-index-js-57f695682baad4a0f483.js","mappings":"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","sources":["webpack://ducky-devine-gatsby-starter/./node_modules/camelcase/index.js","webpack://ducky-devine-gatsby-starter/../src/image-utils.ts","webpack://ducky-devine-gatsby-starter/../src/components/hooks.ts","webpack://ducky-devine-gatsby-starter/../src/components/layout-wrapper.tsx","webpack://ducky-devine-gatsby-starter/../src/components/picture.tsx","webpack://ducky-devine-gatsby-starter/../src/components/placeholder.tsx","webpack://ducky-devine-gatsby-starter/../src/components/main-image.tsx","webpack://ducky-devine-gatsby-starter/../src/components/gatsby-image.server.tsx","webpack://ducky-devine-gatsby-starter/../src/components/gatsby-image.browser.tsx","webpack://ducky-devine-gatsby-starter/../src/components/static-image.server.tsx","webpack://ducky-devine-gatsby-starter/../src/components/static-image.tsx","webpack://ducky-devine-gatsby-starter/./src/components/Blog/Item.js","webpack://ducky-devine-gatsby-starter/./src/components/Blog/Blog.js","webpack://ducky-devine-gatsby-starter/./src/components/Hero/Hero.js","webpack://ducky-devine-gatsby-starter/./src/pages/index.js","webpack://ducky-devine-gatsby-starter/./src/utils/filters.js"],"sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import { FaArrowRight as ArrowRight } from \"react-icons/fa/\";\nimport { Calendar20 as Calendar } from \"@carbon/icons-react\";\nimport { Tag20 as Tag } from \"@carbon/icons-react\";\nimport { User20 as User } from \"@carbon/icons-react\";\n\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { icon } from \"../../utils/type\";\n\nconst Item = props => {\n  const {\n    theme,\n    post: {\n      excerpt,\n      fields: { slug, prefix, title, author, displayCategory, cover },\n      frontmatter: { type }\n    }\n  } = props;\n\n  let gatsbyImageData;\n\n  // Tolerate missing covers. It Should Never Happen, but still does sometime, and we do not want to crash the whole site when it does.\n  if (cover) {\n    gatsbyImageData = cover.children[0].gatsbyImageData;\n  }\n\n  const Icon = icon(type);\n  const linkContent = (\n    <>\n      <div className=\"gatsby-image-outer-wrapper\">\n        <GatsbyImage image={gatsbyImageData} />\n      </div>\n      <h1>\n        {title} <ArrowRight className=\"arrow\" />\n      </h1>\n      <p className=\"meta\">\n        {type && (\n          <span>\n            {Icon && <Icon />} {type}\n          </span>\n        )}\n        <span>\n          <Calendar /> {prefix}\n        </span>\n        <span>\n          <User /> {author}\n        </span>\n        {displayCategory && (\n          <span>\n            <Tag /> {displayCategory}\n          </span>\n        )}\n      </p>\n      <p>{excerpt}</p>\n      <style jsx>{`\n        :global(.link) {\n          width: 100%;\n          color: ${theme.text.color.primary};\n        }\n\n        h1 {\n          padding: ${theme.space.m} ${theme.space.s} 0;\n          line-height: ${theme.blog.h1.lineHeight};\n          font-size: ${theme.blog.h1.size};\n          text-remove-gap: both;\n\n          :global(.arrow) {\n            display: none;\n            position: relative;\n            top: 7px;\n          }\n        }\n\n        .meta {\n          display: flex;\n          flex-flow: row wrap;\n          font-size: 0.8em;\n          padding: ${theme.space.m} ${theme.space.s};\n          background: transparent;\n\n          :global(svg) {\n            fill: ${theme.icon.color};\n            margin: ${theme.space.inline.xs};\n          }\n\n          span {\n            align-items: center;\n            display: flex;\n            text-transform: uppercase;\n            margin: ${theme.space.xs} ${theme.space.s} ${theme.space.xs} 0;\n          }\n        }\n\n        p {\n          line-height: 1.5;\n          padding: 0 ${theme.space.s};\n          text-remove-gap: both;\n        }\n\n        @from-width tablet {\n          h1 {\n            font-size: ${`calc(${theme.blog.h1.size} * 1.2)`};\n            padding: ${`calc(${theme.space.default} * 1.5) ${theme.space.default} 0`};\n            transition: all 0.5s;\n          }\n\n          .meta {\n            padding: ${`calc(${theme.space.m} * 1.5) ${theme.space.m}`};\n          }\n\n          p {\n            padding: 0 ${theme.space.default};\n          }\n        }\n        @from-width desktop {\n          :global(.blogItemLink:first-child) > li::before {\n            top: ${`calc(${theme.space.default} * -2.75)`};\n          }\n\n          h1 {\n            font-size: 2.5em;\n            padding: ${`calc(${theme.space.default} * 1.2) calc(${theme.space.default} * 2) 0`};\n          }\n\n          .meta {\n            padding: ${`calc(${theme.space.default} * 1.5) calc(${theme.space.default} * 2)\n              calc(${theme.space.default} * 0.5)`};\n          }\n\n          p {\n            padding: ${`0 calc(${theme.space.default} * 2)`};\n          }\n\n          :global(.gatsby-image-wrapper) {\n            transition: all ${theme.time.duration.default};\n          }\n\n          :global(.arrow) {\n            display: inline-block;\n            fill: ${theme.color.special.attention};\n            stroke: ${theme.color.special.attention};\n            stroke-width: 40;\n            stroke-linecap: round;\n            opacity: 0;\n            transition: all 0.5s;\n            transform: translateX(-50%);\n          }\n        }\n      `}</style>\n    </>\n  );\n\n  const link = (\n    <Link to={slug} key={slug} className=\"link\">\n      {linkContent}\n    </Link>\n  );\n\n  return (\n    <React.Fragment>\n      <li className=\"blog-item\">{link}</li>\n\n      {/* --- STYLES --- */}\n\n      <style jsx>{`\n        li {\n          border: 1px solid transparent;\n          border-radius: ${theme.size.radius.default};\n          margin: ${`calc(${theme.space.default} * 2) 0 calc(${theme.space.default} * 3)`};\n          padding: ${theme.space.inset.s};\n          position: relative;\n          transition: all ${theme.time.duration.default};\n          background: transparent;\n\n          :global(.gatsby-image-outer-wrapper) {\n            border-radius: ${theme.size.radius.default};\n            border: 1px solid ${theme.line.color};\n            overflow: hidden;\n          }\n\n          :global(.gatsby-image-outer-wrapper img) {\n            z-index: -1;\n          }\n\n          &::after {\n            border-top: 1px solid ${theme.line.color};\n            content: \"\";\n            height: 0;\n            position: absolute;\n            bottom: ${`calc(${theme.space.default} * -1.5)`};\n            left: 50%;\n            transform: translateX(-50%);\n            transition: all ${theme.time.duration.default};\n            width: 50%;\n          }\n\n          &:first-child {\n            &::before {\n              border-top: 1px solid ${theme.line.color};\n              content: \"\";\n              height: 0;\n              position: absolute;\n              top: ${`calc(${theme.space.default} * -1.5)`};\n              left: 50%;\n              transform: translateX(-50%);\n              transition: all ${theme.time.duration.default};\n              width: 50%;\n            }\n          }\n        }\n\n        @from-width tablet {\n          li {\n            margin: ${`calc(${theme.space.default} * 3) 0 calc(${theme.space.default} * 4)`};\n            padding: ${theme.space.default};\n\n            &::after {\n              bottom: ${`calc(${theme.space.default} * -2)`};\n            }\n\n            &:first-child {\n              &::before {\n                top: ${`calc(${theme.space.default} * -1.75)`};\n              }\n            }\n          }\n        }\n        @from-width desktop {\n          li {\n            margin: ${`calc(${theme.space.default} * 4) 0 calc(${theme.space.default} * 5)`};\n            padding: 0 0 ${`calc(${theme.space.default} * 2)`};\n\n            &::after {\n              bottom: ${`calc(${theme.space.default} * -1.5)`};\n            }\n\n            &:first-child {\n              &::before {\n                top: ${`calc(${theme.space.default} * -2.75)`};\n              }\n            }\n          }\n\n          :global(.blogItemLink:first-child) > li::before {\n            top: ${`calc(${theme.space.default} * -2.75)`};\n          }\n\n          li {\n            &:hover {\n              border: 1px solid ${theme.line.color};\n              box-shadow: 0px 3px 2px rgba(0, 0, 0, 0.03);\n\n              &:after {\n                bottom: ${`calc(${theme.space.default} * -2.5)`};\n              }\n\n              :global(.gatsby-image-wrapper) {\n                transform: scale(1.1);\n              }\n\n              h1 {\n                color: ${theme.blog.h1.hoverColor};\n              }\n\n              :global(.arrow) {\n                opacity: 1;\n                stroke: ${theme.color.special.attention};\n                transform: translateX(0);\n              }\n            }\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Item;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport Item from \"./Item\";\n\nconst Blog = props => {\n  const { posts, theme } = props;\n\n  return (\n    <React.Fragment>\n      <main className=\"main\">\n        <ul>\n          {posts.map(post => {\n            const {\n              node,\n              node: {\n                fields: { slug }\n              }\n            } = post;\n            return <Item key={slug} post={node} theme={theme} />;\n          })}\n        </ul>\n      </main>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .main {\n          padding: 0 ${theme.space.inset.default};\n        }\n\n        ul {\n          list-style: none;\n          margin: 0 auto;\n          padding: ${`calc(${theme.space.default} * 1.5) 0 calc(${theme.space.default} * 0.5)`};\n        }\n\n        @above tablet {\n          .main {\n            padding: 0 ${`0 calc(${theme.space.default} * 1.5)`};\n          }\n          ul {\n            max-width: ${theme.text.maxWidth.tablet};\n          }\n        }\n        @above desktop {\n          ul {\n            max-width: ${theme.text.maxWidth.desktop};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nBlog.propTypes = {\n  posts: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Blog;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FaArrowDown } from \"react-icons/fa/\";\nimport config from \"../../utils/configger\";\n\nconst Hero = props => {\n  const { scrollToContent, backgrounds, theme } = props;\n\n  return (\n    <React.Fragment>\n      <section className=\"hero\">\n        <div className=\"heroBio\">\n          <h1>{config.siteTitle}</h1>\n          <h2>{config.siteDescription}</h2>\n        </div>\n        <div>\n          <button onClick={scrollToContent} aria-label=\"scroll\">\n            <FaArrowDown />\n          </button>\n        </div>\n        <div></div>\n      </section>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .hero {\n          align-items: center;\n          background: ${theme.hero.background};\n          background-image: url(${backgrounds.mobile});\n          background-size: cover;\n          color: ${theme.text.color.primary.inverse};\n          display: flex;\n          justify-content: flex-start;\n          flex-direction: row;\n          flex-wrap: nowrap;\n          min-height: 100vh;\n          height: 100px;\n          padding: ${theme.space.inset.l};\n          padding-top: ${theme.header.height.homepage};\n        }\n\n        .heroBio {\n          max-width: 30%;\n        }\n\n        h1 {\n          text-align: left;\n          font-size: ${theme.hero.h1.size};\n          margin: ${theme.space.stack.l};\n          color: ${theme.hero.h1.color};\n          line-height: ${theme.hero.h1.lineHeight};\n          text-remove-gap: both 0 \"Open Sans\";\n\n          :global(strong) {\n            position: relative;\n\n            &::after,\n            &::before {\n              content: \"›\";\n              color: ${theme.text.color.attention};\n              margin: 0 ${theme.space.xs} 0 0;\n              text-shadow: 0 0 ${theme.space.s} ${theme.color.neutral.gray.k};\n            }\n            &::after {\n              content: \"‹\";\n              margin: 0 0 0 ${theme.space.xs};\n            }\n          }\n        }\n\n        h2 {\n          text-align: left;\n          font-size: ${theme.hero.h1.size};\n          margin: ${theme.space.stack.l};\n          color: ${theme.hero.h1.color};\n          line-height: ${theme.hero.h1.lineHeight};\n          text-remove-gap: both 0 \"Open Sans\";\n\n          :global(strong) {\n            position: relative;\n\n            &::after,\n            &::before {\n              content: \"›\";\n              color: ${theme.text.color.attention};\n              margin: 0 ${theme.space.xs} 0 0;\n              text-shadow: 0 0 ${theme.space.s} ${theme.color.neutral.gray.k};\n            }\n            &::after {\n              content: \"‹\";\n              margin: 0 0 0 ${theme.space.xs};\n            }\n          }\n        }\n\n        button {\n          background: ${theme.background.color.brand};\n          border: 0;\n          border-radius: 50%;\n          font-size: ${theme.font.size.m};\n          padding: ${theme.space.s} ${theme.space.m};\n          cursor: pointer;\n          width: ${theme.space.xl};\n          height: ${theme.space.xl};\n\n          &:focus {\n            outline-style: none;\n            background: ${theme.color.brand.primary.active};\n          }\n\n          :global(svg) {\n            position: relative;\n            top: 5px;\n            fill: ${theme.color.neutral.white};\n            stroke-width: 40;\n            stroke: ${theme.color.neutral.white};\n            animation-duration: ${theme.time.duration.long};\n            animation-name: buttonIconMove;\n            animation-iteration-count: infinite;\n          }\n        }\n\n        @keyframes buttonIconMove {\n          0% {\n            transform: translateY(0);\n          }\n          50% {\n            transform: translateY(-10px);\n          }\n          100% {\n            transform: translateY(0);\n          }\n        }\n\n        @from-width tablet {\n          .hero {\n            background-image: url(${backgrounds.tablet});\n          }\n\n          h1 {\n            max-width: 90%;\n            font-size: ${`calc(${theme.hero.h1.size} * 1.3)`};\n          }\n\n          button {\n            font-size: ${theme.font.size.l};\n          }\n        }\n\n        @from-width desktop {\n          .hero {\n            background-image: url(${backgrounds.desktop});\n          }\n\n          h1 {\n            max-width: 80%;\n            font-size: ${`calc(${theme.hero.h1.size} * 1.5)`};\n          }\n\n          button {\n            font-size: ${theme.font.size.xl};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nHero.propTypes = {\n  scrollToContent: PropTypes.func.isRequired,\n  backgrounds: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Hero;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { ThemeContext } from \"../layouts\";\nimport Blog from \"../components/Blog\";\nimport Hero from \"../components/Hero\";\nimport Seo from \"../components/Seo\";\n\nimport { filterOutDrafts } from \"../utils/filters\";\n\nclass IndexPage extends React.Component {\n  separator = React.createRef();\n\n  scrollToContent = () => {\n    this.separator.current.scrollIntoView({ block: \"start\", behavior: \"smooth\" });\n  };\n\n  render() {\n    const {\n      data: {\n        entries: { edges: entries = [] },\n        bgDesktop: {\n          resize: { src: desktop }\n        },\n        bgTablet: {\n          resize: { src: tablet }\n        },\n        bgMobile: {\n          resize: { src: mobile }\n        }\n      }\n    } = this.props;\n\n    const filteredEntries = filterOutDrafts(entries);\n\n    const backgrounds = {\n      desktop,\n      tablet,\n      mobile\n    };\n\n    return (\n      <React.Fragment>\n        <ThemeContext.Consumer>\n          {theme => (\n            <Hero scrollToContent={this.scrollToContent} backgrounds={backgrounds} theme={theme} />\n          )}\n        </ThemeContext.Consumer>\n\n        <hr ref={this.separator} />\n\n        <ThemeContext.Consumer>\n          {theme => <Blog posts={filteredEntries} theme={theme} />}\n        </ThemeContext.Consumer>\n\n        <Seo />\n\n        <style jsx>{`\n          hr {\n            margin: 0;\n            border: 0;\n          }\n        `}</style>\n      </React.Fragment>\n    );\n  }\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default IndexPage;\n\n// eslint-disable-next-line no-undef\nexport const query = graphql`\n  query IndexQuery {\n    entries: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//(posts|publications|talks)/.*--/\" } }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            prefix\n            draft\n            author\n            title\n            category\n            displayCategory\n            cover {\n              children {\n                ... on ImageSharp {\n                  gatsbyImageData(width: 800, height: 360, layout: CONSTRAINED)\n                }\n              }\n            }\n          }\n          frontmatter {\n            url\n            type\n          }\n        }\n      }\n    }\n    bgDesktop: imageSharp(fluid: { originalName: { regex: \"/hero-background/\" } }) {\n      resize(width: 1200, quality: 90, cropFocus: CENTER) {\n        src\n      }\n    }\n    bgTablet: imageSharp(fluid: { originalName: { regex: \"/hero-background/\" } }) {\n      resize(width: 800, height: 1100, quality: 90, cropFocus: CENTER) {\n        src\n      }\n    }\n    bgMobile: imageSharp(fluid: { originalName: { regex: \"/hero-background/\" } }) {\n      resize(width: 450, height: 850, quality: 90, cropFocus: CENTER) {\n        src\n      }\n    }\n  }\n`;\n\n// hero-background\n","// Do not create draft post files in production.\n// This is dynamic rather than a constant for ease of testing\n// See https://www.gatsbyjs.com/docs/how-to/local-development/environment-variables/ for details of the GATSBY_ variables\n// GATSBY_ACTIVE_ENV is the only one of these which 'sticks' in the client side\nconst isProd = () => {\n  const activeEnv =\n    process.env.GATSBY_ACTIVE_ENV ||\n    process.env.ACTIVE_ENV ||\n    process.env.NODE_ENV ||\n    \"development\";\n  // Be less chatty when testing (we can't use the env for this because a test may change it)\n  if (!process.env.SUPPRESS_ENV_OUTPUT) {\n    console.log(`Using environment config: '${activeEnv}'`);\n  }\n  return activeEnv === \"production\";\n};\n\nexports.generateFilter = otherFilter => {\n  let draftsFilters = { fields: { slug: { ne: \"\" } } };\n\n  if (isProd()) {\n    draftsFilters = { fields: { slug: { ne: \"\" }, draft: { ne: true } } };\n  }\n  return { ...draftsFilters, ...otherFilter };\n};\n\nexports.filterOutDrafts = (edges, showFuture) => {\n  // Do this filtering here so that it is dynamic, rather than being done at build-time\n  const now = new Date().getTime();\n  return edges.filter(edge => {\n    if (edge.node && edge.node.fields) {\n      // Exclude anything that looks like a draft in production\n\n      if (isProd()) {\n        // The prefix should exist and match a date in prod\n        // We have to parse a date so we know if it is date-y but we want to use the same regex we use in the graphql filters\n        if (edge.node.fields.draft) {\n          return false;\n        }\n      }\n\n      if (!showFuture) {\n        const date = new Date(edge.node.fields.prefix);\n        const isInTheFuture = date.getTime() > now;\n        return !isInTheFuture;\n      }\n\n      return true;\n    }\n    // If there is no prefix at all, let it through (because otherwise tests get bogged down in boilerplate)\n    return true;\n  });\n};\n"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","map","x","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","N","height","HTMLImageElement","prototype","j","e","t","a","r","u","loading","shouldLoad","style","opacity","O","n","s","o","l","backgroundColor","width","position","top","left","bottom","right","objectFit","objectPosition","d","transition","z","D","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","A","children","c","q","P","H","srcSet","decoding","G","fallback","sources","sizes","_ref6","media","type","key","V","propTypes","isRequired","displayName","B","F","Error","U","Y","_len","arguments","_key","h","apply","concat","X","image","J","Z","K","Set","Q","ee","te","as","className","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","M","k","S","$","I","JSON","stringify","images","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ae","ie","re","_len2","_key2","ne","se","oe","__imageData","__error","console","warn","props","theme","post","excerpt","fields","slug","prefix","title","author","displayCategory","cover","frontmatter","gatsbyImageData","Icon","icon","linkContent","React","_JSXStyle","dynamic","text","color","primary","space","blog","h1","lineHeight","size","inline","xs","default","time","duration","special","attention","GatsbyImage","ArrowRight","Calendar","User","Tag","id","link","Link","to","radius","inset","line","hoverColor","posts","tablet","desktop","node","Item","scrollToContent","backgrounds","hero","background","mobile","inverse","header","homepage","stack","neutral","gray","brand","font","xl","active","white","long","config","onClick","FaArrowDown","IndexPage","_React$Component","_this","args","call","separator","scrollIntoView","block","behavior","_inheritsLoose","render","data","entries","edges","bgDesktop","resize","bgTablet","bgMobile","this","filteredEntries","filterOutDrafts","ThemeContext","Consumer","Hero","Blog","Seo","isProd","activeEnv","process","SUPPRESS_ENV_OUTPUT","log","showFuture","now","Date","getTime","edge","draft"],"sourceRoot":""}