{"version":3,"file":"component---src-pages-index-js-8e0c4d624fe74b4ceeda.js","mappings":"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","sources":["webpack://ducky-devine-gatsby-starter/./node_modules/camelcase/index.js","webpack://ducky-devine-gatsby-starter/../src/image-utils.ts","webpack://ducky-devine-gatsby-starter/../src/components/hooks.ts","webpack://ducky-devine-gatsby-starter/../src/components/picture.tsx","webpack://ducky-devine-gatsby-starter/../src/components/layout-wrapper.tsx","webpack://ducky-devine-gatsby-starter/../src/components/placeholder.tsx","webpack://ducky-devine-gatsby-starter/../src/components/main-image.tsx","webpack://ducky-devine-gatsby-starter/../src/components/gatsby-image.browser.tsx","webpack://ducky-devine-gatsby-starter/../src/components/gatsby-image.server.tsx","webpack://ducky-devine-gatsby-starter/../src/components/static-image.server.tsx","webpack://ducky-devine-gatsby-starter/../src/components/static-image.tsx","webpack://ducky-devine-gatsby-starter/./src/components/Blog/Item.js","webpack://ducky-devine-gatsby-starter/./src/components/Blog/Blog.js","webpack://ducky-devine-gatsby-starter/./src/components/Hero/Hero.js","webpack://ducky-devine-gatsby-starter/./src/pages/index.js","webpack://ducky-devine-gatsby-starter/./src/utils/filters.js"],"sourcesContent":["'use strict';\n\nvar preserveCamelCase = function preserveCamelCase(string) {\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n\n  return string;\n};\n\nvar camelCase = function camelCase(input, options) {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n\n  var postProcess = function postProcess(x) {\n    return options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  };\n\n  if (Array.isArray(input)) {\n    input = input.map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x.length;\n    }).join('-');\n  } else {\n    input = input.trim();\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n\n  var hasUpperCase = input !== input.toLowerCase();\n\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (_, p1) {\n    return p1.toUpperCase();\n  }).replace(/\\d+(\\w|$)/g, function (m) {\n    return m.toUpperCase();\n  });\n  return postProcess(input);\n};\n\nmodule.exports = camelCase; // TODO: Remove this for the next major release\n\nmodule.exports.default = camelCase;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        document.addEventListener(`load`, function onLoadListener() {\n          document.removeEventListener(`load`, onLoadListener)\n\n          onStartLoad?.({\n            wasCached: true,\n          })\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import { FaArrowRight as ArrowRight } from \"react-icons/fa/\";\nimport { Calendar20 as Calendar } from \"@carbon/icons-react\";\nimport { Tag20 as Tag } from \"@carbon/icons-react\";\nimport { User20 as User } from \"@carbon/icons-react\";\n\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { icon } from \"../../utils/type\";\n\nconst Item = props => {\n  const {\n    theme,\n    post: {\n      excerpt,\n      fields: { slug, prefix, title, author, displayCategory, cover },\n      frontmatter: { type }\n    }\n  } = props;\n\n  let gatsbyImageData;\n\n  // Tolerate missing covers. It Should Never Happen, but still does sometime, and we do not want to crash the whole site when it does.\n  if (cover) {\n    gatsbyImageData = cover.children[0].gatsbyImageData;\n  }\n\n  const Icon = icon(type);\n  const linkContent = (\n    <>\n      <div className=\"gatsby-image-outer-wrapper\">\n        <GatsbyImage image={gatsbyImageData} />\n      </div>\n      <h1>\n        {title} <ArrowRight className=\"arrow\" />\n      </h1>\n      <p className=\"meta\">\n        {type && (\n          <span>\n            {Icon && <Icon />} {type}\n          </span>\n        )}\n        <span>\n          <Calendar /> {prefix}\n        </span>\n        <span>\n          <User /> {author}\n        </span>\n        {displayCategory && (\n          <span>\n            <Tag /> {displayCategory}\n          </span>\n        )}\n      </p>\n      <p>{excerpt}</p>\n      <style jsx>{`\n        :global(.link) {\n          width: 100%;\n          color: ${theme.text.color.primary};\n        }\n\n        h1 {\n          padding: ${theme.space.m} ${theme.space.s} 0;\n          line-height: ${theme.blog.h1.lineHeight};\n          font-size: ${theme.blog.h1.size};\n          text-remove-gap: both;\n\n          :global(.arrow) {\n            display: none;\n            position: relative;\n            top: 7px;\n          }\n        }\n\n        .meta {\n          display: flex;\n          flex-flow: row wrap;\n          font-size: 0.8em;\n          padding: ${theme.space.m} ${theme.space.s};\n          background: transparent;\n\n          :global(svg) {\n            fill: ${theme.icon.color};\n            margin: ${theme.space.inline.xs};\n          }\n\n          span {\n            align-items: center;\n            display: flex;\n            text-transform: uppercase;\n            margin: ${theme.space.xs} ${theme.space.s} ${theme.space.xs} 0;\n          }\n        }\n\n        p {\n          line-height: 1.5;\n          padding: 0 ${theme.space.s};\n          text-remove-gap: both;\n        }\n\n        @from-width tablet {\n          h1 {\n            font-size: ${`calc(${theme.blog.h1.size} * 1.2)`};\n            padding: ${`calc(${theme.space.default} * 1.5) ${theme.space.default} 0`};\n            transition: all 0.5s;\n          }\n\n          .meta {\n            padding: ${`calc(${theme.space.m} * 1.5) ${theme.space.m}`};\n          }\n\n          p {\n            padding: 0 ${theme.space.default};\n          }\n        }\n        @from-width desktop {\n          :global(.blogItemLink:first-child) > li::before {\n            top: ${`calc(${theme.space.default} * -2.75)`};\n          }\n\n          h1 {\n            font-size: 2.5em;\n            padding: ${`calc(${theme.space.default} * 1.2) calc(${theme.space.default} * 2) 0`};\n          }\n\n          .meta {\n            padding: ${`calc(${theme.space.default} * 1.5) calc(${theme.space.default} * 2)\n              calc(${theme.space.default} * 0.5)`};\n          }\n\n          p {\n            padding: ${`0 calc(${theme.space.default} * 2)`};\n          }\n\n          :global(.gatsby-image-wrapper) {\n            transition: all ${theme.time.duration.default};\n          }\n\n          :global(.arrow) {\n            display: inline-block;\n            fill: ${theme.color.special.attention};\n            stroke: ${theme.color.special.attention};\n            stroke-width: 40;\n            stroke-linecap: round;\n            opacity: 0;\n            transition: all 0.5s;\n            transform: translateX(-50%);\n          }\n        }\n      `}</style>\n    </>\n  );\n\n  const link = (\n    <Link to={slug} key={slug} className=\"link\">\n      {linkContent}\n    </Link>\n  );\n\n  return (\n    <React.Fragment>\n      <li className=\"blog-item\">{link}</li>\n\n      {/* --- STYLES --- */}\n\n      <style jsx>{`\n        li {\n          border: 1px solid transparent;\n          border-radius: ${theme.size.radius.default};\n          margin: ${`calc(${theme.space.default} * 2) 0 calc(${theme.space.default} * 3)`};\n          padding: ${theme.space.inset.s};\n          position: relative;\n          transition: all ${theme.time.duration.default};\n          background: transparent;\n\n          :global(.gatsby-image-outer-wrapper) {\n            border-radius: ${theme.size.radius.default};\n            border: 1px solid ${theme.line.color};\n            overflow: hidden;\n          }\n\n          :global(.gatsby-image-outer-wrapper img) {\n            z-index: -1;\n          }\n\n          &::after {\n            border-top: 1px solid ${theme.line.color};\n            content: \"\";\n            height: 0;\n            position: absolute;\n            bottom: ${`calc(${theme.space.default} * -1.5)`};\n            left: 50%;\n            transform: translateX(-50%);\n            transition: all ${theme.time.duration.default};\n            width: 50%;\n          }\n\n          &:first-child {\n            &::before {\n              border-top: 1px solid ${theme.line.color};\n              content: \"\";\n              height: 0;\n              position: absolute;\n              top: ${`calc(${theme.space.default} * -1.5)`};\n              left: 50%;\n              transform: translateX(-50%);\n              transition: all ${theme.time.duration.default};\n              width: 50%;\n            }\n          }\n        }\n\n        @from-width tablet {\n          li {\n            margin: ${`calc(${theme.space.default} * 3) 0 calc(${theme.space.default} * 4)`};\n            padding: ${theme.space.default};\n\n            &::after {\n              bottom: ${`calc(${theme.space.default} * -2)`};\n            }\n\n            &:first-child {\n              &::before {\n                top: ${`calc(${theme.space.default} * -1.75)`};\n              }\n            }\n          }\n        }\n        @from-width desktop {\n          li {\n            margin: ${`calc(${theme.space.default} * 4) 0 calc(${theme.space.default} * 5)`};\n            padding: 0 0 ${`calc(${theme.space.default} * 2)`};\n\n            &::after {\n              bottom: ${`calc(${theme.space.default} * -1.5)`};\n            }\n\n            &:first-child {\n              &::before {\n                top: ${`calc(${theme.space.default} * -2.75)`};\n              }\n            }\n          }\n\n          :global(.blogItemLink:first-child) > li::before {\n            top: ${`calc(${theme.space.default} * -2.75)`};\n          }\n\n          li {\n            &:hover {\n              border: 1px solid ${theme.line.color};\n              box-shadow: 0px 3px 2px rgba(0, 0, 0, 0.03);\n\n              &:after {\n                bottom: ${`calc(${theme.space.default} * -2.5)`};\n              }\n\n              :global(.gatsby-image-wrapper) {\n                transform: scale(1.1);\n              }\n\n              h1 {\n                color: ${theme.blog.h1.hoverColor};\n              }\n\n              :global(.arrow) {\n                opacity: 1;\n                stroke: ${theme.color.special.attention};\n                transform: translateX(0);\n              }\n            }\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Item;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport Item from \"./Item\";\n\nconst Blog = props => {\n  const { posts, theme } = props;\n\n  return (\n    <React.Fragment>\n      <main className=\"main\">\n        <ul>\n          {posts.map(post => {\n            const {\n              node,\n              node: {\n                fields: { slug }\n              }\n            } = post;\n            return <Item key={slug} post={node} theme={theme} />;\n          })}\n        </ul>\n      </main>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .main {\n          padding: 0 ${theme.space.inset.default};\n        }\n\n        ul {\n          list-style: none;\n          margin: 0 auto;\n          padding: ${`calc(${theme.space.default} * 1.5) 0 calc(${theme.space.default} * 0.5)`};\n        }\n\n        @above tablet {\n          .main {\n            padding: 0 ${`0 calc(${theme.space.default} * 1.5)`};\n          }\n          ul {\n            max-width: ${theme.text.maxWidth.tablet};\n          }\n        }\n        @above desktop {\n          ul {\n            max-width: ${theme.text.maxWidth.desktop};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nBlog.propTypes = {\n  posts: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Blog;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FaArrowDown } from \"react-icons/fa/\";\nimport config from \"../../utils/configger\";\n\nconst Hero = props => {\n  const { scrollToContent, backgrounds, theme } = props;\n\n  return (\n    <React.Fragment>\n      <section className=\"hero\">\n        <div className=\"heroBio\">\n          <h1>{config.siteTitle}</h1>\n          <h2>{config.siteDescription}</h2>\n        </div>\n        <div>\n          <button onClick={scrollToContent} aria-label=\"scroll\">\n            <FaArrowDown />\n          </button>\n        </div>\n        <div></div>\n      </section>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .hero {\n          align-items: center;\n          background: ${theme.hero.background};\n          background-image: url(${backgrounds.mobile});\n          background-size: cover;\n          color: ${theme.text.color.primary.inverse};\n          display: flex;\n          justify-content: flex-start;\n          flex-direction: row;\n          flex-wrap: nowrap;\n          min-height: 100vh;\n          height: 100px;\n          padding: ${theme.space.inset.l};\n          padding-top: ${theme.header.height.homepage};\n        }\n\n        .heroBio {\n          max-width: 30%;\n        }\n\n        h1 {\n          text-align: left;\n          font-size: ${theme.hero.h1.size};\n          margin: ${theme.space.stack.l};\n          color: ${theme.hero.h1.color};\n          line-height: ${theme.hero.h1.lineHeight};\n          text-remove-gap: both 0 \"Open Sans\";\n\n          :global(strong) {\n            position: relative;\n\n            &::after,\n            &::before {\n              content: \"›\";\n              color: ${theme.text.color.attention};\n              margin: 0 ${theme.space.xs} 0 0;\n              text-shadow: 0 0 ${theme.space.s} ${theme.color.neutral.gray.k};\n            }\n            &::after {\n              content: \"‹\";\n              margin: 0 0 0 ${theme.space.xs};\n            }\n          }\n        }\n\n        h2 {\n          text-align: left;\n          font-size: ${theme.hero.h1.size};\n          margin: ${theme.space.stack.l};\n          color: ${theme.hero.h1.color};\n          line-height: ${theme.hero.h1.lineHeight};\n          text-remove-gap: both 0 \"Open Sans\";\n\n          :global(strong) {\n            position: relative;\n\n            &::after,\n            &::before {\n              content: \"›\";\n              color: ${theme.text.color.attention};\n              margin: 0 ${theme.space.xs} 0 0;\n              text-shadow: 0 0 ${theme.space.s} ${theme.color.neutral.gray.k};\n            }\n            &::after {\n              content: \"‹\";\n              margin: 0 0 0 ${theme.space.xs};\n            }\n          }\n        }\n\n        button {\n          background: ${theme.background.color.brand};\n          border: 0;\n          border-radius: 50%;\n          font-size: ${theme.font.size.m};\n          padding: ${theme.space.s} ${theme.space.m};\n          cursor: pointer;\n          width: ${theme.space.xl};\n          height: ${theme.space.xl};\n\n          &:focus {\n            outline-style: none;\n            background: ${theme.color.brand.primary.active};\n          }\n\n          :global(svg) {\n            position: relative;\n            top: 5px;\n            fill: ${theme.color.neutral.white};\n            stroke-width: 40;\n            stroke: ${theme.color.neutral.white};\n            animation-duration: ${theme.time.duration.long};\n            animation-name: buttonIconMove;\n            animation-iteration-count: infinite;\n          }\n        }\n\n        @keyframes buttonIconMove {\n          0% {\n            transform: translateY(0);\n          }\n          50% {\n            transform: translateY(-10px);\n          }\n          100% {\n            transform: translateY(0);\n          }\n        }\n\n        @from-width tablet {\n          .hero {\n            background-image: url(${backgrounds.tablet});\n          }\n\n          h1 {\n            max-width: 90%;\n            font-size: ${`calc(${theme.hero.h1.size} * 1.3)`};\n          }\n\n          button {\n            font-size: ${theme.font.size.l};\n          }\n        }\n\n        @from-width desktop {\n          .hero {\n            background-image: url(${backgrounds.desktop});\n          }\n\n          h1 {\n            max-width: 80%;\n            font-size: ${`calc(${theme.hero.h1.size} * 1.5)`};\n          }\n\n          button {\n            font-size: ${theme.font.size.xl};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nHero.propTypes = {\n  scrollToContent: PropTypes.func.isRequired,\n  backgrounds: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Hero;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { ThemeContext } from \"../layouts\";\nimport Blog from \"../components/Blog\";\nimport Hero from \"../components/Hero\";\nimport Seo from \"../components/Seo\";\n\nimport { filterOutDrafts } from \"../utils/filters\";\n\nclass IndexPage extends React.Component {\n  separator = React.createRef();\n\n  scrollToContent = () => {\n    this.separator.current.scrollIntoView({ block: \"start\", behavior: \"smooth\" });\n  };\n\n  render() {\n    const {\n      data: {\n        entries: { edges: entries = [] },\n        bgDesktop: {\n          resize: { src: desktop }\n        },\n        bgTablet: {\n          resize: { src: tablet }\n        },\n        bgMobile: {\n          resize: { src: mobile }\n        }\n      }\n    } = this.props;\n\n    const filteredEntries = filterOutDrafts(entries);\n\n    const backgrounds = {\n      desktop,\n      tablet,\n      mobile\n    };\n\n    return (\n      <React.Fragment>\n        <ThemeContext.Consumer>\n          {theme => (\n            <Hero scrollToContent={this.scrollToContent} backgrounds={backgrounds} theme={theme} />\n          )}\n        </ThemeContext.Consumer>\n\n        <hr ref={this.separator} />\n\n        <ThemeContext.Consumer>\n          {theme => <Blog posts={filteredEntries} theme={theme} />}\n        </ThemeContext.Consumer>\n\n        <Seo />\n\n        <style jsx>{`\n          hr {\n            margin: 0;\n            border: 0;\n          }\n        `}</style>\n      </React.Fragment>\n    );\n  }\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default IndexPage;\n\n// eslint-disable-next-line no-undef\nexport const query = graphql`\n  query IndexQuery {\n    entries: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//(posts|publications|talks)/.*--/\" } }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            prefix\n            draft\n            author\n            title\n            category\n            displayCategory\n            cover {\n              children {\n                ... on ImageSharp {\n                  gatsbyImageData(width: 800, height: 360, layout: CONSTRAINED)\n                }\n              }\n            }\n          }\n          frontmatter {\n            url\n            type\n          }\n        }\n      }\n    }\n    bgDesktop: imageSharp(fluid: { originalName: { regex: \"/hero-background/\" } }) {\n      resize(width: 1200, quality: 90, cropFocus: CENTER) {\n        src\n      }\n    }\n    bgTablet: imageSharp(fluid: { originalName: { regex: \"/hero-background/\" } }) {\n      resize(width: 800, height: 1100, quality: 90, cropFocus: CENTER) {\n        src\n      }\n    }\n    bgMobile: imageSharp(fluid: { originalName: { regex: \"/hero-background/\" } }) {\n      resize(width: 450, height: 850, quality: 90, cropFocus: CENTER) {\n        src\n      }\n    }\n  }\n`;\n\n// hero-background\n","// Do not create draft post files in production.\n// This is dynamic rather than a constant for ease of testing\n// See https://www.gatsbyjs.com/docs/how-to/local-development/environment-variables/ for details of the GATSBY_ variables\n// GATSBY_ACTIVE_ENV is the only one of these which 'sticks' in the client side\nconst isProd = () => {\n  const activeEnv =\n    process.env.GATSBY_ACTIVE_ENV ||\n    process.env.ACTIVE_ENV ||\n    process.env.NODE_ENV ||\n    \"development\";\n  // Be less chatty when testing (we can't use the env for this because a test may change it)\n  if (!process.env.SUPPRESS_ENV_OUTPUT) {\n    console.log(`Using environment config: '${activeEnv}'`);\n  }\n  return activeEnv === \"production\";\n};\n\nexports.generateFilter = otherFilter => {\n  let draftsFilters = { fields: { slug: { ne: \"\" } } };\n\n  if (isProd()) {\n    draftsFilters = { fields: { slug: { ne: \"\" }, draft: { ne: true } } };\n  }\n  return { ...draftsFilters, ...otherFilter };\n};\n\nexports.filterOutDrafts = (edges, showFuture) => {\n  // Do this filtering here so that it is dynamic, rather than being done at build-time\n  const now = new Date().getTime();\n  return edges.filter(edge => {\n    if (edge.node && edge.node.fields) {\n      // Exclude anything that looks like a draft in production\n\n      if (isProd()) {\n        // The prefix should exist and match a date in prod\n        // We have to parse a date so we know if it is date-y but we want to use the same regex we use in the graphql filters\n        if (edge.node.fields.draft) {\n          return false;\n        }\n      }\n\n      if (!showFuture) {\n        const date = new Date(edge.node.fields.prefix);\n        const isInTheFuture = date.getTime() > now;\n        return !isInTheFuture;\n      }\n\n      return true;\n    }\n    // If there is no prefix at all, let it through (because otherwise tests get bogged down in boilerplate)\n    return true;\n  });\n};\n"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","map","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","height","hasNativeLazyLoadSupport","HTMLImageElement","prototype","format","getMainProps","isLoading","isLoaded","images","loading","style","shouldLoad","opacity","getPlaceholderProps","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","result","transition","output","fallbackImage","Sizer","React","paddingTop","maxWidth","display","alt","role","src","LayoutWrapper","children","props","Fragment","Image","srcSet","decoding","undefined","Picture","fallback","t","sources","sizes","media","type","key","propTypes","PropTypes","displayName","isRequired","Placeholder","propName","componentName","Error","MainImage","renderImageToStringPromise","renderImage","altValidator","rest","image","imageCache","Set","GatsbyImageHydrator","onError","as","className","preactClass","class","onStartLoad","onLoad","overflow","wStyle","wClass","wrapperProps","root","useRef","cacheKey","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","animationFrame","cleanupCallback","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","document","addEventListener","onLoadListener","removeEventListener","add","has","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","createElement","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","warn","checkDimensionProps","validLayouts","StaticImage","GatsbyImageBrowser","__error","imageData","__imageData","console","gatsbyImageData","theme","post","excerpt","fields","slug","prefix","title","author","displayCategory","cover","frontmatter","Icon","icon","linkContent","text","color","primary","space","s","blog","h1","lineHeight","size","inline","xs","default","time","duration","special","attention","G","link","Link","to","radius","inset","line","hoverColor","posts","tablet","desktop","node","scrollToContent","backgrounds","hero","background","mobile","inverse","l","header","homepage","stack","neutral","gray","k","brand","font","xl","active","white","long","config","onClick","IndexPage","separator","scrollIntoView","block","behavior","render","this","data","entries","edges","bgDesktop","resize","bgTablet","bgMobile","filteredEntries","filterOutDrafts","ThemeContext","Seo","isProd","process","SUPPRESS_ENV_OUTPUT","log","activeEnv","showFuture","now","Date","getTime","edge","draft"],"sourceRoot":""}